package Runner;

import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ComponentAdapter;
import java.awt.event.ComponentEvent;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;

import Logic.EstacionVcubLogic;

public class Main extends JFrame implements ActionListener{

	private static final long serialVersionUID = 1L;

	EstacionVcubLogic logic;
	JPanel everything;
	JPanel buts;
	JButton but1;
	JButton but2;
	JPanel userIn;
	JLabel lab;
	JTextField input;
	JPanel vcubs;
	JLabel success;
	JLabel denied;
	JLabel numVc;
	
	public Main(){
        logic = new EstacionVcubLogic();
        this.setSize(400, 400);
        everything = new JPanel();
        everything.setLayout(new BorderLayout());
        //BOTONES
        buts = new JPanel();
        buts.setLayout(new GridLayout());
        but1 = new JButton("Reservar Vcub");
        but1.setActionCommand("retirar");
        but1.addActionListener(this);
        but2 = new JButton("Devolver Vcub");
        but2.setActionCommand("devolver");
        but2.addActionListener(this);
        buts.add(but1);
        buts.add(but2);
        //USER INPUT
        userIn = new JPanel();
        userIn.setLayout(new GridLayout());
        lab = new JLabel("Usuario : ");
        input = new JTextField();
        userIn.add(lab);
        userIn.add(input);
        //VCUBRTA
        vcubs = new JPanel();
        vcubs.setLayout(new BorderLayout());
        success = new JLabel("SUCCESS");
        denied = new JLabel();
        numVc = new JLabel();
        vcubs.add(numVc, BorderLayout.SOUTH);
        vcubs.setVisible(false);
        //EVERYTHING
        everything.add(userIn, BorderLayout.NORTH);
        everything.add(buts, BorderLayout.SOUTH);
        everything.add(vcubs, BorderLayout.CENTER);
        this.setTitle(logic.getNombreEstacion());
        this.add(everything);
        this.setVisible(true);
        this.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
	}

    public static void main(String[] args){
        Main main = new Main();
    }

    @Override
    public void dispose(){
    	logic.persist();
    	super.dispose();
    }
    
	@Override
	public void actionPerformed(ActionEvent event) {
		if(event.getActionCommand().equals("retirar")){
			if(!input.getText().equals("")){
				String[] rta = logic.retiroVcub(Long.parseLong(input.getText())).split(":");
				if(Integer.parseInt(rta[1])!=200){
					vcubs.add(denied, BorderLayout.CENTER);
					numVc.setText("Numero de Vcubs rentadas : "+rta[0]);
				}else{
					vcubs.add(success, BorderLayout.CENTER);
					numVc.setText("Numero de Vcubs rentadas : "+rta[0]);
				}
				vcubs.setVisible(true);
			}else{
				JOptionPane.showMessageDialog( this, "Numero de identificacion invalido.", "Error de identificacion", JOptionPane.ERROR_MESSAGE );
			}
		}
		if(event.getActionCommand().equals("devolver")){
			if(!input.getText().equals("")){
				String[] rta = logic.devolucionVcub(Long.parseLong(input.getText())).split(":");
				if(Integer.parseInt(rta[1])!=200){
					vcubs.add(denied, BorderLayout.CENTER);
					numVc.setText("Numero de Vcubs rentadas : "+rta[0]);
				}else{
					vcubs.add(success, BorderLayout.CENTER);
					numVc.setText("Numero de Vcubs rentadas : "+rta[0]);
				}
				vcubs.setVisible(true);
			}else{
				JOptionPane.showMessageDialog( this, "Numero de identificacion invalido.", "Error de identificacion", JOptionPane.ERROR_MESSAGE );
			}
		}
	}
}
